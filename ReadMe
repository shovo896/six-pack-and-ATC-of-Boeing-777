 Boeing 777 Six Pack Instrument Simulation with ATC Communication

This project simulates the Six Pack flight instruments  of a Boeing 777 aircraft and includes a mock ATC (Air Traffic Control)  communication system. Designed in Python, it can be expanded into a more detailed flight training tool or integrated into larger flight simulation systems.



 Project Structure

boeing777_sim/
│
├── main.py                           # Main simulation script
├── six_pack/                         # Core flight instruments
│   ├── airspeed_indicator.py
│   ├── attitude_indicator.py
│   ├── altimeter.py
│   ├── vertical_speed_indicator.py
│   ├── turn_coordinator.py
│   └── heading_indicator.py
│
├── atc_communication/               # ATC message handler
│   └── atc_receiver.py
│
├── control_surfaces/               # Rudder, Aileron, Elevator
│   ├── rudder.py
│   ├── aileron.py
│   └── elevator.py
│
└── utils/
    └── data_generator.py           # (Optional) Random flight data generator




 Features

*  Simulates all Six Pack instruments:

  * Airspeed Indicator
  * Attitude Indicator
  * Altimeter
  * Vertical Speed Indicator (VSI)
  * Turn Coordinator
  * Heading Indicator

*  Mock ATC Communication

* Receives random ATC instructions like heading changes, altitude changes, and contact messages

*  Basic control surfaces (rudder, aileron, elevator)

*  Easy to extend into full-scale flight simulations



###  Sample Output


Airspeed: 250 knots
Attitude - Pitch: 5.2°, Roll: -10.5°
Altitude: 15000 feet
Vertical Speed: 1200 ft/min
Turn Rate: 1.3°/s
Heading: 90°
ATC Message: Climb and maintain 10,000 feet


How to Run

1. Clone the repository:

bash
git clone https://github.com/shovo896/boeing777_sim.git
cd boeing777_sim


2. Run the simulation:

```bash
python main.py
```

>  Requires Python 3.6 or higher.



 Optional: Test Script

Add this as `test_sim.py` to verify instrument outputs:

python
from six_pack.airspeed_indicator import AirspeedIndicator

def test_airspeed():
    a = AirspeedIndicator()
    a.update(250)
    assert a.airspeed == 250
    a.display()

test_airspeed()

###  Future Improvements

* Add `tkinter` or `pygame` GUI interface
* Integrate with flight simulators like X-Plane or MSFS
* Real-time data via sockets or Web APIs
* Emergency ATC scenarios
* Logging system for training reviews




